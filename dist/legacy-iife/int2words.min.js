/*! int2words v2.0.0 <github:dmkishi/int2words> */
var int2words=function(e){"use strict";class n extends Error{constructor(e){super(e),this.name="CoercionError"}}function t(e,t){const o=function(e){return function(t){const r=new n(t);if(e)throw r;return console.error(r.toString()),!1}}(t);return"string"==typeof e?""===e?o("Expected a non-empty string."):isNaN(Number(e))?o("Failed to extract number."):r(Number(e),o):"number"==typeof e?r(e,o):o("Expected a string or number.")}function r(e,n){return Number.isInteger(e)?e<0?n("Expected a positive integer."):!(e>Number.MAX_SAFE_INTEGER)||n(`Integers greater than ${Number.MAX_SAFE_INTEGER} not supported.`):n("Expected an integer.")}function o(e,n){const t=[],r=String(e).split("").reverse();for(let e=0;;e+=n){const o=r.slice(e,e+n).reverse();if(o.length!==n){if(o.length>0){const e=[...Array(n-o.length).fill("0"),...o];t.push(i(e))}break}t.push(i(o))}return t}function i(e){return e.map((e=>Number(e)))}const u=["","一","二","三","四","五","六","七","八","九"],s=["","十","百","千"],c=["","万","億","兆","京","垓","𥝱","穣"],l={throwError:!1};function f(e){if(!t(e,(arguments.length>1&&void 0!==arguments[1]?arguments[1]:l).throwError))return"";return function(e){let n="";return e.forEach(((e,t)=>{const r=c[t];n=""!==r&&"千"===e?"一"+e+r+n:e+r+n})),n||"零"}(o(Number(e),4).map((e=>function(e){const[n,t,r,o]=e,i=h(n,4),u=h(t,3),s=h(r,2),c=h(o,1);return`${i}${u}${s}${c}`}(e))))}function h(e,n){const t=n-1;return 0===t?u[e]:0===e?"":1===e?s[t]:u[e]+s[t]}const a=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],p=["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"],E=["","thousand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","octillion","nonillion"],g={throwError:!1};return e.CoercionError=n,e.int2en=function(e){return t(e,(arguments.length>1&&void 0!==arguments[1]?arguments[1]:g).throwError)?function(e){const n=[];return e.forEach(((e,t)=>{if(""===e)return;const r=E[t],o=""===r?e:`${e} ${r}`;n.push(o)})),n.reverse().join(" ")||"zero"}(o(Number(e),3).map((e=>function(e){const[n,t,r]=e,o=[];0!==n&&o.push(`${a[n]} hundred`);switch(t){case 0:0!==r&&o.push(a[r]);break;case 1:o.push(a[10+r]);break;default:0===r?o.push(p[t]):o.push(`${p[t]}-${a[r]}`)}return o.join(" ")}(e)))):""},e.int2ja=f,e.int2jp=f,e}({});
//# sourceMappingURL=int2words.min.js.map
